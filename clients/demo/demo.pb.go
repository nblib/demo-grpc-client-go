// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demo.proto

/*
Package demo is a generated protocol buffer package.

It is generated from these files:
	demo.proto

It has these top-level messages:
	CheckIps
	CheckResult
	ContectInfo
	Empty
*/
package demo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CheckIps struct {
	Name string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Ips  []string `protobuf:"bytes,2,rep,name=ips" json:"ips,omitempty"`
}

func (m *CheckIps) Reset()                    { *m = CheckIps{} }
func (m *CheckIps) String() string            { return proto.CompactTextString(m) }
func (*CheckIps) ProtoMessage()               {}
func (*CheckIps) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CheckIps) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CheckIps) GetIps() []string {
	if m != nil {
		return m.Ips
	}
	return nil
}

type CheckResult struct {
	Results map[string]bool `protobuf:"bytes,1,rep,name=results" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *CheckResult) Reset()                    { *m = CheckResult{} }
func (m *CheckResult) String() string            { return proto.CompactTextString(m) }
func (*CheckResult) ProtoMessage()               {}
func (*CheckResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CheckResult) GetResults() map[string]bool {
	if m != nil {
		return m.Results
	}
	return nil
}

// 示例 oneof
type ContectInfo struct {
	// Types that are valid to be assigned to Phone:
	//	*ContectInfo_Cell
	//	*ContectInfo_Tel
	Phone isContectInfo_Phone `protobuf_oneof:"phone"`
}

func (m *ContectInfo) Reset()                    { *m = ContectInfo{} }
func (m *ContectInfo) String() string            { return proto.CompactTextString(m) }
func (*ContectInfo) ProtoMessage()               {}
func (*ContectInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isContectInfo_Phone interface {
	isContectInfo_Phone()
}

type ContectInfo_Cell struct {
	Cell string `protobuf:"bytes,1,opt,name=cell,oneof"`
}
type ContectInfo_Tel struct {
	Tel string `protobuf:"bytes,2,opt,name=tel,oneof"`
}

func (*ContectInfo_Cell) isContectInfo_Phone() {}
func (*ContectInfo_Tel) isContectInfo_Phone()  {}

func (m *ContectInfo) GetPhone() isContectInfo_Phone {
	if m != nil {
		return m.Phone
	}
	return nil
}

func (m *ContectInfo) GetCell() string {
	if x, ok := m.GetPhone().(*ContectInfo_Cell); ok {
		return x.Cell
	}
	return ""
}

func (m *ContectInfo) GetTel() string {
	if x, ok := m.GetPhone().(*ContectInfo_Tel); ok {
		return x.Tel
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ContectInfo) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ContectInfo_OneofMarshaler, _ContectInfo_OneofUnmarshaler, _ContectInfo_OneofSizer, []interface{}{
		(*ContectInfo_Cell)(nil),
		(*ContectInfo_Tel)(nil),
	}
}

func _ContectInfo_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ContectInfo)
	// phone
	switch x := m.Phone.(type) {
	case *ContectInfo_Cell:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Cell)
	case *ContectInfo_Tel:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Tel)
	case nil:
	default:
		return fmt.Errorf("ContectInfo.Phone has unexpected type %T", x)
	}
	return nil
}

func _ContectInfo_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ContectInfo)
	switch tag {
	case 1: // phone.cell
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Phone = &ContectInfo_Cell{x}
		return true, err
	case 2: // phone.tel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Phone = &ContectInfo_Tel{x}
		return true, err
	default:
		return false, nil
	}
}

func _ContectInfo_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ContectInfo)
	// phone
	switch x := m.Phone.(type) {
	case *ContectInfo_Cell:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Cell)))
		n += len(x.Cell)
	case *ContectInfo_Tel:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Tel)))
		n += len(x.Tel)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*CheckIps)(nil), "demo.CheckIps")
	proto.RegisterType((*CheckResult)(nil), "demo.CheckResult")
	proto.RegisterType((*ContectInfo)(nil), "demo.ContectInfo")
	proto.RegisterType((*Empty)(nil), "demo.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DemoService service

type DemoServiceClient interface {
	CheckIfBlack(ctx context.Context, in *CheckIps, opts ...grpc.CallOption) (*CheckResult, error)
	GetContectInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ContectInfo, error)
}

type demoServiceClient struct {
	cc *grpc.ClientConn
}

func NewDemoServiceClient(cc *grpc.ClientConn) DemoServiceClient {
	return &demoServiceClient{cc}
}

func (c *demoServiceClient) CheckIfBlack(ctx context.Context, in *CheckIps, opts ...grpc.CallOption) (*CheckResult, error) {
	out := new(CheckResult)
	err := grpc.Invoke(ctx, "/demo.DemoService/checkIfBlack", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) GetContectInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ContectInfo, error) {
	out := new(ContectInfo)
	err := grpc.Invoke(ctx, "/demo.DemoService/getContectInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DemoService service

type DemoServiceServer interface {
	CheckIfBlack(context.Context, *CheckIps) (*CheckResult, error)
	GetContectInfo(context.Context, *Empty) (*ContectInfo, error)
}

func RegisterDemoServiceServer(s *grpc.Server, srv DemoServiceServer) {
	s.RegisterService(&_DemoService_serviceDesc, srv)
}

func _DemoService_CheckIfBlack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckIps)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).CheckIfBlack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.DemoService/CheckIfBlack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).CheckIfBlack(ctx, req.(*CheckIps))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_GetContectInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).GetContectInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.DemoService/GetContectInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).GetContectInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _DemoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demo.DemoService",
	HandlerType: (*DemoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "checkIfBlack",
			Handler:    _DemoService_CheckIfBlack_Handler,
		},
		{
			MethodName: "getContectInfo",
			Handler:    _DemoService_GetContectInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "demo.proto",
}

func init() { proto.RegisterFile("demo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x51, 0xcd, 0x6e, 0xf2, 0x30,
	0x10, 0xc4, 0x04, 0x3e, 0x60, 0x83, 0xd0, 0xc7, 0x8a, 0x43, 0xc4, 0xa1, 0x4a, 0x73, 0xca, 0x29,
	0xa2, 0xf4, 0x82, 0x38, 0x55, 0xa1, 0x48, 0xe5, 0x86, 0xdc, 0x27, 0xa0, 0xee, 0x52, 0x10, 0x4e,
	0x6c, 0xc5, 0x86, 0x8a, 0x73, 0x5f, 0xbc, 0xb2, 0xd3, 0x9f, 0x48, 0x3d, 0x79, 0x66, 0x77, 0x46,
	0xb3, 0xeb, 0x05, 0x78, 0xa5, 0x42, 0x65, 0xba, 0x52, 0x56, 0x61, 0xc7, 0xe1, 0x64, 0x06, 0xfd,
	0xd5, 0x81, 0xc4, 0x69, 0xa3, 0x0d, 0x22, 0x74, 0xca, 0x5d, 0x41, 0x11, 0x8b, 0x59, 0x3a, 0xe0,
	0x1e, 0xe3, 0x7f, 0x08, 0x8e, 0xda, 0x44, 0xed, 0x38, 0x48, 0x07, 0xdc, 0xc1, 0xe4, 0x83, 0x41,
	0xe8, 0x2d, 0x9c, 0xcc, 0x59, 0x5a, 0x5c, 0x40, 0xaf, 0xf2, 0xc8, 0x44, 0x2c, 0x0e, 0xd2, 0x70,
	0x7e, 0x93, 0xf9, 0x94, 0x86, 0x26, 0xab, 0x1f, 0xb3, 0x2e, 0x6d, 0x75, 0xe5, 0xdf, 0xf2, 0xe9,
	0x12, 0x86, 0xcd, 0x86, 0xcb, 0x3a, 0xd1, 0xf5, 0x2b, 0xde, 0x41, 0x9c, 0x40, 0xf7, 0xb2, 0x93,
	0x67, 0x8a, 0xda, 0x31, 0x4b, 0xfb, 0xbc, 0x26, 0xcb, 0xf6, 0x82, 0x25, 0x0f, 0x10, 0xae, 0x54,
	0x69, 0x49, 0xd8, 0x4d, 0xb9, 0x57, 0x38, 0x81, 0x8e, 0x20, 0x29, 0x6b, 0xef, 0x53, 0x8b, 0x7b,
	0x86, 0x08, 0x81, 0x25, 0xe9, 0xcd, 0xae, 0xe8, 0x48, 0xde, 0x83, 0xae, 0x3e, 0xa8, 0x92, 0x92,
	0x1e, 0x74, 0xd7, 0x85, 0xb6, 0xd7, 0x79, 0x05, 0xe1, 0x23, 0x15, 0xea, 0x99, 0xaa, 0xcb, 0x51,
	0x10, 0xde, 0xc1, 0x50, 0xf8, 0x1f, 0xd9, 0xe7, 0x72, 0x27, 0x4e, 0x38, 0x6a, 0xac, 0xb3, 0xd1,
	0x66, 0x3a, 0xfe, 0xb3, 0x1e, 0xce, 0x60, 0xf4, 0x46, 0xb6, 0x39, 0x4f, 0x58, 0x8b, 0x7c, 0xc0,
	0x8f, 0xe3, 0xb7, 0x9f, 0xdf, 0xc2, 0xd8, 0xd7, 0x0e, 0xf4, 0x4e, 0xd9, 0x51, 0x79, 0x41, 0x0e,
	0x6e, 0x0c, 0xb5, 0x75, 0xd7, 0xd9, 0xb6, 0x5e, 0xfe, 0xf9, 0x33, 0xdd, 0x7f, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x01, 0xd8, 0x25, 0x79, 0xb4, 0x01, 0x00, 0x00,
}
